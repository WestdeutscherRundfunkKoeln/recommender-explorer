name: CICD Main Workflow

on:
  push:
    branches: 
      - '*'
  pull_request:
    branches:
      - 'main'
      - 'dev'

jobs:
  unit_tests:
    name: unit_tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
    
      - name: Run all unit tests
        run: |
            pytest test/unit --doctest-modules --junitxml=junit/test-results.xml

  
  #Build Images (not publish) on pull to dev & main
  docker_build:
    needs: unit_tests
    name: docker_build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.base_ref == 'dev' || github.base_ref == 'main')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker Images 
        run: |
          docker build --file ./microservices/ingestservice/docker/Dockerfile ./microservices/ingestservice
          echo "ingest service image build OK"
          docker build --file ./microservices/searchservice/docker/Dockerfile ./microservices/searchservice
          echo "search service image build OK"
          docker build --file ./microservices/embeddingservice/docker/Dockerfile ./microservices/embeddingservice
          echo "embedding service image build OK"


  build_publish_deploy_ingest_dev:
    needs: unit_tests
    uses: ./.github/workflows/build-publish-deploy.yml
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    with:
      service-name: ingest
      stage: dev
    secrets:
      PAT: ${{ secrets.PAT }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
      MS_PREFIX: ${{ secrets.MS_PREFIX }}

    
  build_publish_deploy_search_dev:
      needs: unit_tests
      uses: ./.github/workflows/build-publish-deploy.yml
      if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
      with:
        service-name: search
        stage: dev
      secrets:
        PAT: ${{ secrets.PAT }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
        MS_PREFIX: ${{ secrets.MS_PREFIX }}


  build_publish_deploy_embedding_dev:
    needs: unit_tests
    uses: ./.github/workflows/build-publish-deploy.yml
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    with:
      service-name: embedding
      stage: dev
    secrets:
      PAT: ${{ secrets.PAT }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
      MS_PREFIX: ${{ secrets.MS_PREFIX }}


  build_publish_deploy_ingest_prod:
    needs: unit_tests
    uses: ./.github/workflows/build-publish-deploy.yml
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    with:
      service-name: ingest
      stage: prod
    secrets:
      PAT: ${{ secrets.PAT }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
      MS_PREFIX: ${{ secrets.MS_PREFIX }}
    
        
  build_publish_deploy_search_prod:
    needs: unit_tests
    uses: ./.github/workflows/build-publish-deploy.yml
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    with:
      service-name: search
      stage: prod
    secrets:
      PAT: ${{ secrets.PAT }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
      MS_PREFIX: ${{ secrets.MS_PREFIX }}
    
    
  build_publish_deploy_embedding_prod:
    needs: unit_tests
    uses: ./.github/workflows/build-publish-deploy.yml
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    with:
      service-name: embedding
      stage: prod
    secrets:
      PAT: ${{ secrets.PAT }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
      MS_PREFIX: ${{ secrets.MS_PREFIX }}
