version: "3"
services:
  opensearch-node1:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.type=single-node
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m # Set min and max JVM heap sizes to at least 50% of system RAM
      - DISABLE_INSTALL_DEMO_CONFIG=true # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - DISABLE_SECURITY_PLUGIN=true # Disables Security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-dashboards:
    profiles:
      - dashboard
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch-node1:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true # disables security dashboards plugin in OpenSearch Dashboards
    networks:
      - opensearch-net
  ingest-service:
    image: reco-explorer-ingest-service
    build:
      context: ./microservices/ingestservice
      dockerfile: ./docker/Dockerfile
    container_name: ingest-service
    ports:
      - 1337:80
    expose:
      - "1337"
    environment:
      - API_PREFIX=
      - API_KEY=test
      - BASE_URL_SEARCH=http://search-service
      - BASE_URL_INGEST=http://ingest-service
      - BASE_URL_EMBEDDING=http://embedding-service
      - OPENSEARCH_HOST=opensearch-node1
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USER=admin
      - OPENSEARCH_PASS=admin
      - OPENSEARCH_INDEX=test_index
      - MAPPING_DEFINITION='{"id":.sophoraId,"externalid":.externalId,"uuid":.uuid,"type":.type,"title":.title,"description":.["description"],"longDescription":.["longDescription"],"embedText":(.title+""+.longDescription),"availableFrom":.availableFrom,"availableTo":.availableTo,"firstPublicationDate":.firstPublicationDate,"keywords":.keywords,"language":.language,"duration":.durationSeconds,"thematicCategories":.thematicCategories,"genreCategory":.genreCategory,"subgenreCategories":.subgenreCategories,"filterCategory":.filterCategory,"structurePath":.structurePath,"site":.site,"domain":.domain,"teaserimage":.teaserImage.url,"fskAgeRating":.fskAgeRating,"contentRatings":.contentRatings,"geoAvailability":.geoAvailability,"all-MiniLM-L6-v2_title_desc_nokeywords":.["all-MiniLM-L6-v2_title_desc_nokeywords"],"sophoraid":.sophoraId}'
      - STORAGE_SERVICE_ACCOUNT
      - REEMBED_INTERVAL_SECONDS=10
      - GCS_URL=http://fake-gcs-server
    networks:
      - opensearch-net
  search-service:
    image: reco-explorer-search-service
    build:
      context: ./microservices/searchservice
      dockerfile: ./docker/Dockerfile
    container_name: search-service
    ports:
      - 1336:80
    expose:
      - "1336"
    environment:
      - API_PREFIX=
      - BASE_URL_SEARCH=http://search-service
      - BASE_URL_INGEST=http://ingest-service
      - BASE_URL_EMBEDDING=http://embedding-service
      - OPENSEARCH_HOST=opensearch-node1
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USER=admin
      - OPENSEARCH_PASS=admin
      - OPENSEARCH_INDEX=test_index
      - DEPLOYMENT_ENVIRONMENT=LOCAL
    networks:
      - opensearch-net
  embedding-service:
    image: reco-explorer-embedding-service
    build:
      context: ./microservices/embeddingservice
      dockerfile: ./docker/Dockerfile
    container_name: embedding-service
    healthcheck:
      test: curl -f http://embedding-service/health-check || exit 1
      start_period: 2m
    ports:
      - 1338:80
    expose:
      - "1338"
    environment:
      - API_PREFIX=
      - API_KEY=test
      - BASE_URL_SEARCH=http://search-service
      - BASE_URL_INGEST=http://ingest-service
      - BASE_URL_EMBEDDING=http://embedding-service
      - DEPLOYMENT_ENVIRONMENT=DEV
      - BUCKET_NAME=zdf-d01-g-pa-dp-wdr-0-ml-models
      - BUCKET_PATH=sentence_transformers
      - LOCAL_MODEL_PATH=/models
      - SERVICE_ACCOUNT
    networks:
      - opensearch-net
    volumes:
      - models-volume:/models
  reco-explorer-ui:
    image: reco-explorer-ui
    profiles:
      - ui
    build: .
    container_name: reco-explorer-ui
    command: panel serve RecoExplorer.py --address 0.0.0.0 --port 80 --allow-websocket-origin="*" --log-level info --args config=config/config_mediathek.yaml
    ports:
      - 8080:80
    expose:
      - "8080"
    environment:
      - DATABACKEND_TYPE=opensearch
      - OPENSEARCH_HOST=opensearch-node1
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USER=admin
      - OPENSEARCH_PASS=admin
      - OPENSEARCH_INDEX=test_index
      - OPENSEARCH_USE_SSL=true
    networks:
      - opensearch-net
  fake-gcs-server:
    container_name: fake-gcs-server
    profiles:
      - mock_gcs
    image: fsouza/fake-gcs-server
    entrypoint: ["/bin/fake-gcs-server", "-data", "/data", "-scheme", "http", "-external-url", "http://fake-gcs-server:4443"]
    ports:
      - 4443:4443
    networks:
      - opensearch-net
    volumes:
      - ./test/testdata:/data
networks:
  opensearch-net:
volumes:
  models-volume:
